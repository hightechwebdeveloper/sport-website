@using MTDB.Core.Domain
@using MTDB.Core.Services.Packs
@using MTDB.Helpers
@model MTDB.Controllers.LeaderboardViewModel

@{
    var ranges = new List<Tuple<LeaderboardRange, string, string>>();
    ranges.Add(Tuple.Create(LeaderboardRange.Daily, LeaderboardRange.Daily.ToString(), @Url.Action("Leaderboard", new { pack = Model.Uri, range = LeaderboardRange.Daily.ToString() })));
    ranges.Add(Tuple.Create(LeaderboardRange.Weekly, LeaderboardRange.Weekly.ToString(), @Url.Action("Leaderboard", new { pack = Model.Uri, range = LeaderboardRange.Weekly.ToString() })));
    ranges.Add(Tuple.Create(LeaderboardRange.Monthly, LeaderboardRange.Monthly.ToString(), @Url.Action("Leaderboard", new { pack = Model.Uri, range = LeaderboardRange.Monthly.ToString() })));
    ranges.Add(Tuple.Create(LeaderboardRange.AllTime, "All Time", @Url.Action("Leaderboard", new { pack = Model.Uri, range = LeaderboardRange.AllTime.ToString() })));
    var selected = ranges.First(x => x.Item1 == Model.Range).Item3;
}

<link href="~/libs/jquery/plugins/integration/bootstrap/3/dataTables.bootstrap.css" rel="stylesheet" />
<!-- main header -->
<div class="bg-light lter b-b wrapper-md">
    <div class="row">
        <div class="col-sm-6 col-xs-12">
            <h1 class="m-n font-thin h3 text-black">@Model.Pack Leaderboard</h1>
        </div>
        <div class="col-sm-6 text-right">
            <div class="inline m-r text-left">

                @if (!(Model.Pack.IndexOf("All", StringComparison.OrdinalIgnoreCase) >= 0))
                {
                    @Html.ActionLink("All Packs Leaderboard", "LeaderboardDefault", "Pack", null, new {@class = "btn btn-primary"})
                }

                @if (!(Model.Pack.IndexOf("Draft", StringComparison.OrdinalIgnoreCase) >= 0))
                {
                    @Html.ActionLink("Draft Leaderboard", "Leaderboard", "Pack", new {pack = "draft", range = LeaderboardRange.Daily.ToString()}, new {@class = "btn btn-primary"})
                }

                @if (!(Model.Pack.IndexOf("MTDB", StringComparison.OrdinalIgnoreCase) >= 0))
                {
                    @Html.ActionLink("MTDB Leaderboard", "Leaderboard", "Pack", new {pack = "mtdb", range = LeaderboardRange.Daily.ToString()}, new {@class = "btn btn-primary"})
                }

                @Html.ActionLink("Open Packs", "Index", "Pack", null, new {@class = "btn btn-primary"})
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
        @Html.DropDownList("LeaderboardRange", new SelectList(ranges, "Item3", "Item2", selected), new { onchange = "location = this.value", @class = "form-control" })    
        </div>
        
    </div>
</div>
<!-- / main header -->
<div class="wrapper-md">
    <!-- players -->
    <div class="panel panel-default">
        <div class="panel-heading">
            @Model.Pack Results
        </div>

        <div class="table-responsive">
            <table id="results" class="table table-striped b-t b-light playerList">
                <thead>
                    <tr>
                        <th style="text-align: left;">@Html.SortingHeader("TITLE", "Leaderboard", "Pack", "title", Model.SortedBy, Model.SortOrder, new RouteValueDictionary(new { pack = Model.Pack, range = Model.Range }))</th>
                        <th>@Html.SortingHeader("USER", "Leaderboard", "Pack", "user", Model.SortedBy, Model.SortOrder, new RouteValueDictionary(new { pack = Model.Pack, range = Model.Range }))</th>
                        <th>@Html.SortingHeader("DATE", "Leaderboard", "Pack", "date", Model.SortedBy, Model.SortOrder, new RouteValueDictionary(new { pack = Model.Pack, range = Model.Range }))</th>
                        <th>@Html.SortingHeader("PACK", "Leaderboard", "Pack", "pack", Model.SortedBy, Model.SortOrder, new RouteValueDictionary(new { pack = Model.Pack, range = Model.Range }))</th>
                        <th>@Html.SortingHeader("SCORE", "Leaderboard", "Pack", "score", Model.SortedBy, Model.SortOrder, new RouteValueDictionary(new { pack = Model.Pack, range = Model.Range }))</th>
                    </tr>
                </thead>
                <tbody class="facetwp-template">
                    @if (Model.Results != null && Model.Results.Any())
                    {
                        foreach (var pack in Model.Results)
                        {
                            <tr>
                                <td>
                                    <h5>
                                        @if (pack.Pack == CardPackType.Mtdb)
                                        {
                                            <a href="@Url.Action("MtdbDetails", "Pack", new {id = pack.Id})">@pack.Name</a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("DraftDetails", "Pack", new {id = pack.Id})">@pack.Name</a>
                                        }
                                    </h5>
                                </td>
                                <td>
                                    @pack.User
                                </td>
                                <td>
                                    @pack.CreatedDateString
                                </td>
                                <td>
                                    @pack.Pack
                                </td>

                                <td>
                                    @pack.Score
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <footer class="panel-footer">
            <div class="row">
                <div class="col-sm-8 text-left">
                    <small class="text-muted inline m-t-sm m-b-sm">Showing @Model.Results.FirstItemOnPage-@Model.Results.LastItemOnPage of @Model.Results.TotalItemCount items</small>
                </div>
                @Html.ThemedPager(Model.Results, page => Url.Action("Leaderboard", new { page = page, sortedBy = Model.SortedBy, sortOrder = Model.SortOrder, pack = Model.Pack, range = Model.Range }))
            </div>
        </footer>
    </div>
    <!-- players -->
</div>
