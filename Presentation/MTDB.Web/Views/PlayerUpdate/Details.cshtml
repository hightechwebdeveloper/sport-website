@using MTDB.Controllers
@using MTDB.Core
@using MTDB.Core.ViewModels.PlayerUpdates
@using MTDB.Helpers
@model PlayerUpdateDetailsViewModel
<div class="bg-light lter b-b wrapper-md">
    <div class="row">
        <div class="col-sm-6 col-xs-12">
            @if (Model.Title.HasValue())
            {
                if (Model.Visible)
                {
                    <h1 class="m-n font-thin h3 text-black">@Model.Date.ToString("d") - @Model.Title - @Model.TotalUpdateCount Updates</h1>
                }
                else
                {
                    <h1 class="m-n font-thin h3 text-black">@Model.Date.ToString("d") - @Model.Title - @Model.TotalUpdateCount Updates (Hidden)</h1>
                }

            }
            else
            {
                if (Model.Visible)
                {
                    <h1 class="m-n font-thin h3 text-black">@Model.Date.ToString("d") - @Model.TotalUpdateCount Updates</h1>
                }
                else
                {
                    <h1 class="m-n font-thin h3 text-black">@Model.Date.ToString("d") - @Model.TotalUpdateCount Updates (Hidden)</h1>
                }
            }
        </div>
        <div class="col-sm-6 text-right">
            <div class="inline text-left">
                @Html.ActionLink("View All Updates", "Index", new {controller = "PlayerUpdate"}, new {@class = "btn btn-primary"})
            </div>
        </div>
    </div>
    @if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        <div class="row">
            <div class="col-xs-12 text-right">
                <br/>
                @if (Model.Visible)
                {
                    using (Html.BeginForm("UpdateTitle", "PlayerUpdate", FormMethod.Post, new {@class = "form-inline", @role = "form", @id = "submitForm"}))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-group">
                            <label class="sr-only" for="exampleInputEmail2">Update Title</label>
                            @Html.TextBoxFor(m => m.Title, new {placeholder = "Enter update title", @id = "exampleInputEmail2", @class = "form-control"})
                            @Html.ValidationMessageFor(m => m.Title)
                        </div>
                        <button id="submitButton" type="button" class="btn btn-primary">Save Title</button>
                    }
                }
                else
                {
                    using (Html.BeginForm("PublishUpdate", "PlayerUpdate", FormMethod.Post, new {@class = "form-inline", @role = "form", @id = "submitForm"}))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            <label class="sr-only" for="exampleInputEmail2">Title</label>
                            @Html.TextBoxFor(m => m.Title, new {placeholder = "Enter update title", @id = "exampleInputEmail2", @class = "form-control"})
                            @Html.ValidationMessageFor(m => m.Title)
                        </div>
                        <button id="submitButton" type="button" class="btn btn-primary">Publish</button>
                    }

                    @Html.ActionLink("Delete", "DeleteUpdate", new {year = Model.Date.Year, month = Model.Date.Month, day = Model.Date.Day})
                }
            </div>
        </div>
    }
</div>
<div class="wrapper-md">
    <hr class="m-b-xs m-t-none">
    <div class="row">
        <div class="col-sm-8 text-left">
            <small class="text-muted inline m-t-sm m-b-sm">Showing @Model.Updates.Results.FirstItemOnPage-@Model.Updates.Results.LastItemOnPage of @Model.TotalUpdateCount items</small>
        </div>
        @Html.ThemedPager(Model.Updates.Results, page => Url.Action("Details", new { page = page }))
    </div>
    <hr class="m-t-none">
    <div class="row">
        <div id="player-updates" class="col-md-12">
            @if (Model.DisplayNewCards && Model.Updates.Results.Any(p => p.UpdateType == PlayerUpdateModelType.New))
            {
                <div class="row">
                    <div class="col-md-12">
                        <h3>New Cards</h3>
                        <hr class="m-b-md m-t-none" />
                        <ul class="list-inline listUpdates3 col-md-12">
                            @foreach (var newUpdate in Model.Updates.Results.Where(p => p.UpdateType == PlayerUpdateModelType.New))
                            {
                                <li>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <a href="@Url.Action("Details", "Player", new {playerUri = newUpdate.UriName})">
                                                <img src="@newUpdate.ImageUri" class="img-responsive center-block">
                                            </a>
                                        </div>
                                    </div>
                                </li>
                            }
                            <!-- /new card -->
                        </ul>
                    </div>
                </div>
            }
            @if (Model.Updates.Results.Any(p => p.UpdateType == PlayerUpdateModelType.Update))
            {
                <div class="row">
                    <div class="col-md-12">
                        <h3>Dynamic Ratings</h3>
                        <hr class="m-b-md m-t-none">
                    </div>
                    <ul class="list-inline listUpdates2 col-md-12">
                        @foreach (var update in Model.Updates.Results.Where(p => p.UpdateType == PlayerUpdateModelType.Update))
                        {
                            <li>
                                <div class="upcardleft">
                                    <a href="@Url.Action("Details", "Player", new {playerUri = update.UriName})">
                                        <div class="upcard" style="background-image: url('@update.ImageUri');"></div>
                                    </a>
                                    <button class="btn btn-primary btn-block btn-sm m-t-xs" data-toggle="modal" data-target=".@update.UriName-modal">View All (@update.FieldUpdates.Count())</button>
                                </div>
                                <div class="upcardright">
                                    <ul class="list-unstyled listUpdates m-b-none">
                                        @foreach (var fieldUpdate in update.FieldUpdates.Take(9))
                                        {
                                            @Html.FieldUpdate(fieldUpdate, true)
                                        }
                                    </ul>
                                </div>

                                <!-- modal -->
                                <div class="modal fade @update.UriName-modal" tabindex="-1" role="dialog" aria-labelledby="updateModal001">
                                    <div class="modal-dialog modal-sm">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                <h4 class="modal-title" id="myModalLabel">All Updates</h4>

                                            </div>
                                            <div class="modal-body">
                                                <ul class="list-group m-b-none list-unstyled text-center">
                                                    <li class="list-group-item"><img src="@update.ImageUri" class="img-responsive cardGfxModal center-block"></li>
                                                    @foreach (var fieldUpdate in update.FieldUpdates)
                                                    {
                                                        @Html.FieldUpdate(fieldUpdate, false)
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /modal -->

                                </div>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
    <hr class="m-b-xs">
    <!-- paging -->
    <div class="row">
        <div class="col-sm-8 text-left">
            <small class="text-muted inline m-t-sm m-b-sm">Showing @Model.Updates.Results.FirstItemOnPage-@Model.Updates.Results.LastItemOnPage of @Model.TotalUpdateCount items</small>
        </div>
        @Html.ThemedPager(Model.Updates.Results, page => Url.Action("Details", new { page = page }))
    </div>
    <!-- /paging -->
    <hr class="m-t-none">
</div>

<div class="wrapper-lg">
    @Html.Partial("Comments", (string)ViewBag.CommentsPageUrl)
</div>

@section scripts{
    <!-- color of stats -->
    <script type="text/javascript">
        var cell = $('.statNum');
        cell.each(function () {
            var cell_value = $(this).html();
            if ((cell_value >= 0) && (cell_value <= 59)) {
                $(this).css({ 'background': '#A52A2A' });
            } else if ((cell_value >= 60) && (cell_value <= 69)) {
                $(this).css({ 'background': '#D2691E' });
            } else if ((cell_value >= 70) && (cell_value <= 79)) {
                $(this).css({ 'background': '#DAA520' });
            } else if ((cell_value >= 80) && (cell_value <= 89)) {
                $(this).css({ 'background': '#008000' });
            } else if (cell_value >= 90) {
                $(this).css({ 'background': '#32CD32' });
            }
        });
    </script>

    <script type="text/javascript">
        $("#submitButton").one("click", function (event) {
            $('#submitButton').prop('disabled', true);
            $('#submitForm').submit();
        });
    </script>
}