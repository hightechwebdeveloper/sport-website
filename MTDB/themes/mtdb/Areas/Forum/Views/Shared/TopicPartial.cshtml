@model mvcForum.Web.ViewModels.TopicViewModel
@using mvcForum.Web.Extensions;
@using mvcForum.Web.Helpers;
@using MTDB.Core
@{
    var iconName = string.Empty;
    var iconTitles = new List<string>();
    if (!Model.Deleted)
    {
        iconName = "forum-thread-row";
        if (Model.Sticky)
        {
            iconName += " forum-thread-row-pinned";
            iconTitles.Add("Pinned");
        }
        else if (Model.Announcement)
        {
            iconName += " forum-announcement";
            iconTitles.Add("Announcement");
        }
        else if (!Model.Locked)
        {
            iconName += " forum-thread-row-typical";
        }

        if (Model.Locked)
        {
            if (!Model.Announcement)
            {
                iconName += " forum-thread-row-locked";
            }
            iconTitles.Add("Locked");
        }
    }
    else
    {
        iconName = "forum-thread-row-deleted ";
        iconTitles.Add("Deleted");
    }
    //if (Model.Moved)
    //{
    //    iconName = "topic_moved ";
    //}
    //else
    //{

    if (Model.HasUnread)
    {
        iconName += " forum-thread-row-unread";
    }
    else
    {
        iconName += " forum-thread-row-read";
    }


    var iconTitle = string.Join(", ", iconTitles);
    @*}*@

    //string title = Model.Title;
    //if (Model.Moved)
    //{
    //    title = Model.OriginalTopic.Title;
    //}
}

<tr class="j-forum-thread-row forum-thread-row @(iconName)">
    <td class="col-status">
        <a href="@Url.RouteUrl("ShowTopic", new {id = Model.Moved && !Model.OriginalTopic.Deleted ? Model.OriginalTopic.Id : Model.Id, title = Model.Title.ToSlug()})"title="@iconTitle">
            <span class="forum-thread-state"></span>
        </a>
    </td>
    <td class="col-thread ">
        @*@if (Model.Deleted)
        {
            @ForumHelper.GetString("Topic.Deleted")
        }*@

        @if (!Model.Moved)
        {
            @ForumHelper.GetString("Topic.Moved")
        }

        <span class="j-thread-title thread-title">
            <a href="@Url.RouteUrl("ShowTopic", new { id = Model.Moved && !Model.OriginalTopic.Deleted ? Model.OriginalTopic.Id : Model.Id, title = Model.Title.ToSlug(), additional = "sincelast" })#sincelast" class="title">@Model.Title</a>
        </span>
        
        <div class="thread-author">
            by <a href="@Url.RouteUrl("ShowProfile", new RouteValueDictionary { { "id", Model.AuthorId }, { "name", Model.Author.ToSlug() } })"><span class="user user-role-registered-user">@Model.Author</span></a>
            <span class="thread-post-date">
                <time itemprop="datePublished"><abbr class="tip standard-date standard-datetime" title="@Model.Posted.ToLocalTime().ToString("G")">@Model.Posted.Relative()</abbr></time>
            </span>
        </div>

        @if (Model.Pages > 1)
        {
            <ul class="b-pagination b-pagination-b">
                @for (var index = 1; index <= Model.Pages; index++)
                {
                    <li class="b-pagination-item">
                        <a href="@Url.RouteUrl("ShowTopic", new RouteValueDictionary {{"id", Model.Id}, {"title", Model.Title.ToSlug()}, {"page", index}})">@index</a>
                    </li>
                }
            </ul>
        }
    </td>
    <td class="col-last-post">
        @Html.Partial("LastMessagePartial", Model)
    </td>
    <td class="col-count">
        @Model.MessageCount
    </td>
    <td class="col-count">
        @Model.Views
    </td>
</tr>